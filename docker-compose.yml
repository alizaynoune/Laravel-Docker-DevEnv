########################################################################
#                      SHARED CONFIGURATION                            #
########################################################################
x-app-args: &default-args
  USER_UID: ${USER_UID}
  USER_GID: ${USER_GID}
  USER_NAME: ${USER_NAME}
  USER_PASSWORD: ${USER_PASSWORD}
  ROOT_PASSWORD: ${ROOT_PASSWORD}

services:
  ########################################################################
  #                      WORKSPACE CONTAINER                             #
  ########################################################################
  workspace:
    build:
      context: ./
      dockerfile: docker/workspace.Dockerfile
      args:
        <<: *default-args
    container_name: workspace
    restart: unless-stopped
    hostname: workspace
    volumes:
      - app-data:${DESTINATION_DIR}:rw
      - ./docker/ssh:/home/${USER_NAME}/.ssh:rw
      - ./docker/scripts/workspace.entrypoint.sh:/entrypoint.sh:ro
    command: /entrypoint.sh ${DEFAULT_PHP:-8.0}
    working_dir: ${DESTINATION_DIR}
    networks:
      - laravel-docker-devenv-network
    environment:
      - XDEBUG_HOST=host.docker.internal
      - XDEBUG_REMOTE_PORT=9003
    healthcheck:
      test: ["CMD", "ps", "aux", "|", "grep", "sshd"]
      interval: 30s
      timeout: 10s
      retries: 3

  ########################################################################
  #                      NGINX WEB SERVER                               #
  ########################################################################
  nginx:
    build:
      context: ./
      dockerfile: docker/nginx.Dockerfile
      args:
        DESTINATION_DIR: ${DESTINATION_DIR}
    container_name: nginx
    restart: unless-stopped
    volumes:
      - app-data:${DESTINATION_DIR}:rw
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    working_dir: ${DESTINATION_DIR}
    entrypoint: ["/bin/sh", "-c", "nginx -g 'daemon off;'"]
    hostname: nginx
    networks:
      laravel-docker-devenv-network:
        ipv4_address: 172.19.0.30
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - workspace
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  ########################################################################
  #                      MYSQL DATABASE                                 #
  ########################################################################
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USERNAME}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: ${TZ:-UTC}
    volumes:
      - mysql-data:/var/lib/mysql:rw
      - ./docker/db/mysql/my.cnf:/etc/mysql/my.cnf:ro
    tty: true
    hostname: mysql
    ports:
      - "3306:3306"
    networks:
      - laravel-docker-devenv-network
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 3

  ########################################################################
  #                      PHPMYADMIN                                     #
  ########################################################################
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
      UPLOAD_LIMIT: 300M
    networks:
      - laravel-docker-devenv-network
    depends_on:
      - mysql

  ########################################################################
  #                      REDIS                                          #
  ########################################################################
  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    volumes:
      - redis-data:/data:rw
      - ./docker/db/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server ${REDIS_ARGS:- }
    ports:
      - "6379:6379"
    networks:
      - laravel-docker-devenv-network
    hostname: redis
    deploy:
      resources:
        limits:
          cpus: "2"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

########################################################################
#                      NETWORKS                                        #
########################################################################
networks:
  laravel-docker-devenv-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.19.0.0/16

########################################################################
#                      VOLUMES                                         #
########################################################################
volumes:
  # Application data volume
  app-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${APP_DIR}

  # Redis data volume
  redis-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${REDIS_DATA_DIR}

  # MySQL data volume
  mysql-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${MYSQL_DATA_DIR}

